{"version":3,"sources":["webpack:///./js/components/RelicForm.jsx","webpack:///./js/store/relicsStore.jsx","webpack:///./js/store/relicsFormStore.jsx","webpack:///../public/css/relicForm.module.css?e617","webpack:///../public/css/relicForm.module.css"],"names":["props","useState","relicsFormStore","initialState","relicsFormState","setRelicsFormState","relicsStore","relicsState","setRelicsState","useLayoutEffect","formSubscription","subscribe","init","storeSubscription","then","axios","get","BACKEND_URL","res","setRefinementList","data","setRelicsTypesList","unsubscribe","handleCheckboxChange","event","isrefinement","target","value","type","checked","name","addRefinementList","removeRefinementList","addRelicsTypesList","removeRelicsTypesList","className","Form","refinementList","map","refin","FormGroup","key","check","Label","Input","onChange","relicsTypesList","length","Tabs","defaultIndex","TabList","relic","Tab","era","TabPanel","names","sort","relicName","defaultChecked","indexOf","Button","color","onClick","setLoadingState","post","refinement","relic_name","setRelicsStats","catch","err","console","log","subject","Subject","state","next","setState","newList","newRefin","filter","newRelic","api","content","__esModule","default","module","i","options","exported","locals","exports","___CSS_LOADER_API_IMPORT___","push"],"mappings":"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","file":"6.bundle.js","sourcesContent":["import React, {useLayoutEffect, useState} from 'react';\r\nimport relicsStore from '../store/relicsStore';\r\nimport relicsFormStore from '../store/relicsFormStore';\r\nimport {Button, Form, FormGroup, Input, Label} from 'reactstrap';\r\nimport {Tab, TabList, TabPanel, Tabs} from \"react-tabs\";\r\n\r\nimport 'react-tabs/style/react-tabs.css';\r\nimport \"../../../public/css/relicForm.module.css\"\r\n\r\nconst RelicForm = (props) => {\r\n\r\n        const [relicsFormState, setRelicsFormState] = useState(relicsFormStore.initialState);\r\n        const [relicsState, setRelicsState] = useState(relicsStore.initialState);\r\n\r\n        useLayoutEffect(() => {\r\n            const formSubscription = relicsFormStore.subscribe(setRelicsFormState);\r\n            relicsFormStore.init();\r\n            const storeSubscription = relicsStore.subscribe(setRelicsState);\r\n            relicsStore.init();\r\n\r\n            import('axios').then(axios => {\r\n                axios.get(`${BACKEND_URL}/getRefinementList`)\r\n                    .then(res => {\r\n                        relicsStore.setRefinementList(res.data);\r\n                    });\r\n\r\n                axios.get(`${BACKEND_URL}/getRelicsList`)\r\n                    .then(res => {\r\n                        relicsStore.setRelicsTypesList(res.data);\r\n                    });\r\n            });\r\n            return () => {\r\n                formSubscription.unsubscribe();\r\n                storeSubscription.unsubscribe();\r\n            };\r\n        }, []);\r\n\r\n        const handleCheckboxChange = (event, isrefinement) => {\r\n            const target = event.target;\r\n            const value = target.type === 'checkbox' ? target.checked : target.value;\r\n            const name = target.name;\r\n\r\n            if (isrefinement) {\r\n                if (value)\r\n                    relicsFormStore.addRefinementList(name);\r\n                else\r\n                    relicsFormStore.removeRefinementList(name);\r\n            } else {\r\n                if (value)\r\n                    relicsFormStore.addRelicsTypesList(name);\r\n                else\r\n                    relicsFormStore.removeRelicsTypesList(name);\r\n            }\r\n        };\r\n\r\n        const checkRelics = (name) => {\r\n            return relicsFormState.relicsTypesList.indexOf(name) !== -1;\r\n        };\r\n\r\n        const submit = () => {\r\n            props.setLoadingState(true);\r\n            import('axios').then(axios => {\r\n                axios.post(`${BACKEND_URL}/getRelicsStats`, {\r\n                    refinement: relicsFormState.refinementList,\r\n                    relic_name: relicsFormState.relicsTypesList\r\n                })\r\n                    .then(res => {\r\n                        props.setLoadingState(false);\r\n                        props.setRelicsStats(res.data);\r\n                    })\r\n                    .catch(err => {\r\n                        console.log(err);\r\n                    });\r\n            });\r\n        };\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <Form>\r\n                    <div className=\"row justify-content-center align-items-center\">\r\n                        <div className=\"col-6\">\r\n                            <fieldset className=\"borderForm\">\r\n                                <legend className=\"legend\">Refinement</legend>\r\n                                {relicsState.refinementList.map(refin => (\r\n                                    <FormGroup key={refin} check>\r\n                                        <Label check>\r\n                                            <Input name={refin} value=\"refin\" type=\"checkbox\"\r\n                                                   onChange={(event) => handleCheckboxChange(event, true)}/>\r\n                                            {' '}\r\n                                            {refin}\r\n                                        </Label>\r\n                                    </FormGroup>\r\n                                ))}\r\n                            </fieldset>\r\n                        </div>\r\n                        {relicsState.relicsTypesList.length > 0 &&\r\n                        <div className=\"col-6\">\r\n                            <fieldset className=\"borderForm float-right\">\r\n                                <legend className=\"legend\">Relics</legend>\r\n                                <Tabs defaultIndex={0}>\r\n                                    <TabList>\r\n                                        {relicsState.relicsTypesList.map(relic => (\r\n                                            <Tab key={`tab_${relic.era}`}>{relic.era}</Tab>\r\n                                        ))}\r\n                                    </TabList>\r\n\r\n                                    {relicsState.relicsTypesList.map(relic => (\r\n                                        <TabPanel key={`tabpanel_${relic.era}`} className=\"items\">\r\n                                            {\r\n                                                relic.names.sort().map(relicName => (\r\n                                                    <FormGroup key={`${relic.era}_${relicName}`} check\r\n                                                               className=\"item\">\r\n                                                        <Label check>\r\n                                                            <Input value={`${relic.era}_${relicName}`}\r\n                                                                   name={`${relic.era}_${relicName}`}\r\n                                                                   defaultChecked={checkRelics(`${relic.era}_${relicName}`)}\r\n                                                                   type=\"checkbox\"\r\n                                                                   onChange={(event) => handleCheckboxChange(event, false)}/>\r\n                                                            {' '}\r\n                                                            {relicName}\r\n                                                        </Label>\r\n                                                    </FormGroup>\r\n                                                ))\r\n                                            }\r\n                                        </TabPanel>\r\n                                    ))}\r\n                                </Tabs>\r\n                            </fieldset>\r\n                        </div>\r\n                        }\r\n                    </div>\r\n                </Form>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <Button color=\"primary\" className=\"float-right\" onClick={submit}>Search</Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n;\r\n\r\nexport default RelicForm;","import {Subject} from 'rxjs';\r\n\r\nconst subject = new Subject();\r\n\r\nconst initialState = {\r\n    refinementList: [],\r\n    relicsTypesList: []\r\n};\r\nlet state = initialState;\r\n\r\nconst relicsStore = {\r\n    init: () => subject.next(state),\r\n    subscribe: setState => subject.subscribe(setState),\r\n    unsubscribe: () => subject.unsubscribe(),\r\n    setRefinementList: newList => {\r\n        state = {\r\n            ...state,\r\n            refinementList: newList,\r\n        };\r\n        subject.next(state);\r\n    },\r\n    setRelicsTypesList: newList => {\r\n        state = {\r\n            ...state,\r\n            relicsTypesList: newList,\r\n        };\r\n        subject.next(state);\r\n    },\r\n    initialState\r\n};\r\n\r\nexport default relicsStore;","import {Subject} from 'rxjs';\r\n\r\nconst subject = new Subject();\r\n\r\nconst initialState = {\r\n    refinementList: [],\r\n    relicsTypesList: []\r\n};\r\nlet state = initialState;\r\n\r\nconst relicsFormStore = {\r\n    init: () => subject.next(state),\r\n    subscribe: setState => subject.subscribe(setState),\r\n    unsubscribe: () => subject.unsubscribe(),\r\n    addRefinementList: newRefin => {\r\n        state = {\r\n            ...state,\r\n            refinementList: [...state.refinementList, newRefin],\r\n        };\r\n        subject.next(state);\r\n    },\r\n    removeRefinementList: newRefin => {\r\n        state = {\r\n            ...state,\r\n            refinementList: state.refinementList.filter(refin => newRefin === refin),\r\n        };\r\n        subject.next(state);\r\n    },\r\n    addRelicsTypesList: newRelic => {\r\n        state = {\r\n            ...state,\r\n            relicsTypesList: [...state.relicsTypesList, newRelic],\r\n        };\r\n        subject.next(state);\r\n    },\r\n    removeRelicsTypesList: newRelic => {\r\n        state = {\r\n            ...state,\r\n            relicsTypesList: state.refinementList.filter(relic => newRelic === relic),\r\n        };\r\n        subject.next(state);\r\n    },\r\n    initialState\r\n};\r\n\r\nexport default relicsFormStore;","var api = require(\"!../../static/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../static/node_modules/css-loader/dist/cjs.js!./relicForm.module.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(module.id, content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../static/node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".items {\\r\\n    display: flex;\\r\\n    flex-wrap: wrap;\\r\\n}\\r\\n\\r\\n.item {\\r\\n    flex: 1 0 10%;\\r\\n    box-sizing: border-box;\\r\\n    color: #171e42;\\r\\n    padding: 5px;\\r\\n}\\r\\n\\r\\n.borderForm {\\r\\n    border: 2px groove #ddd !important;\\r\\n    padding: 0 1.4em 1.4em 1.4em !important;\\r\\n    margin: 0 0 1.5em 0 !important;\\r\\n}\\r\\n\\r\\n.legend {\\r\\n    font-size: 1.2em !important;\\r\\n    font-weight: bold !important;\\r\\n    text-align: left !important;\\r\\n    width: auto;\\r\\n    padding-left: 10px;\\r\\n    padding-right: 10px;\\r\\n    border-bottom: none;\\r\\n}\\r\\n\\r\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n"],"sourceRoot":""}